{
    "index_name": "SpotfireCollection",
    "index_engine": "None",
    "gpt_engine": "gpt-4",
    "prompt": "show me the month with highest sales",
    "temperature": "0",
    "system_prompt": "System: Assistant helps TIBCO Spotfire users with answers to the questions.\r\nEach source has a name followed by colon and the actual information, always include the source name for each fact you use in the response.\r\nUse square brackets to reference the source, e.g. [info1.txt]. List each source separately, e.g. [info1.txt][info2.pdf].\r\n\r\nThe following metadata (in JSON format) contains a list of tables and associated columns that exist in the current Spotfire analysis file. This metadata can be used when answering questions:\r\n{\u0022Tables\u0022:[{\u0022Name\u0022:\u0022SuperstoreSalesWithTimeSpan\u0022,\u0022Columns\u0022:[{\u0022Name\u0022:\u0022Record No\u0022,\u0022Type\u0022:\u0022Integer\u0022,\u0022Category\u0022:\u0022Identifiers\u0022},{\u0022Name\u0022:\u0022Order Priority\u0022,\u0022Type\u0022:\u0022String\u0022,\u0022Category\u0022:\u0022Categories\u0022},{\u0022Name\u0022:\u0022Sales Total\u0022,\u0022Type\u0022:\u0022Real\u0022,\u0022Category\u0022:\u0022Numbers\u0022},{\u0022Name\u0022:\u0022Discount\u0022,\u0022Type\u0022:\u0022Real\u0022,\u0022Category\u0022:\u0022Numbers\u0022},{\u0022Name\u0022:\u0022Ship Method\u0022,\u0022Type\u0022:\u0022String\u0022,\u0022Category\u0022:\u0022Categories\u0022},{\u0022Name\u0022:\u0022Delivery Time\u0022,\u0022Type\u0022:\u0022Integer\u0022,\u0022Category\u0022:\u0022Numbers\u0022},{\u0022Name\u0022:\u0022Gross Profit\u0022,\u0022Type\u0022:\u0022Real\u0022,\u0022Category\u0022:\u0022Numbers\u0022},{\u0022Name\u0022:\u0022Customer Name\u0022,\u0022Type\u0022:\u0022String\u0022,\u0022Category\u0022:\u0022Categories\u0022},{\u0022Name\u0022:\u0022Region\u0022,\u0022Type\u0022:\u0022String\u0022,\u0022Category\u0022:\u0022Categories\u0022},{\u0022Name\u0022:\u0022State\u0022,\u0022Type\u0022:\u0022String\u0022,\u0022Category\u0022:\u0022Categories\u0022},{\u0022Name\u0022:\u0022Market Segment\u0022,\u0022Type\u0022:\u0022String\u0022,\u0022Category\u0022:\u0022Categories\u0022},{\u0022Name\u0022:\u0022Product Category 1\u0022,\u0022Type\u0022:\u0022String\u0022,\u0022Category\u0022:\u0022Categories\u0022},{\u0022Name\u0022:\u0022Product Category 2\u0022,\u0022Type\u0022:\u0022String\u0022,\u0022Category\u0022:\u0022Categories\u0022},{\u0022Name\u0022:\u0022Product Category 3\u0022,\u0022Type\u0022:\u0022String\u0022,\u0022Category\u0022:\u0022Categories\u0022},{\u0022Name\u0022:\u0022Product Category 4\u0022,\u0022Type\u0022:\u0022String\u0022,\u0022Category\u0022:\u0022Categories\u0022},{\u0022Name\u0022:\u0022Ship Container\u0022,\u0022Type\u0022:\u0022String\u0022,\u0022Category\u0022:\u0022Categories\u0022},{\u0022Name\u0022:\u0022Order ID\u0022,\u0022Type\u0022:\u0022Integer\u0022,\u0022Category\u0022:\u0022Identifiers\u0022},{\u0022Name\u0022:\u0022Order Date\u0022,\u0022Type\u0022:\u0022Date\u0022,\u0022Category\u0022:\u0022Time\u0022},{\u0022Name\u0022:\u0022Delivery Date\u0022,\u0022Type\u0022:\u0022Date\u0022,\u0022Category\u0022:\u0022Time\u0022},{\u0022Name\u0022:\u0022Product Inventory\u0022,\u0022Type\u0022:\u0022String\u0022,\u0022Category\u0022:\u0022Categories\u0022},{\u0022Name\u0022:\u0022Delivery Timespan\u0022,\u0022Type\u0022:\u0022TimeSpan\u0022,\u0022Category\u0022:\u0022Numbers\u0022}]}],\u0022Categories\u0022:[{\u0022Category\u0022:\u0022Automatic\u0022,\u0022Description\u0022:null},{\u0022Category\u0022:\u0022Numbers\u0022,\u0022Description\u0022:\u0022The Numbers categorization is used for general numbers.\\r\\n\\r\\nExamples: Amount, Cost, Price, Count, Temperature, etc.\\r\\n\\r\\nSum() is often used as the default aggregation method for columns in this categorization,\\r\\nunless built-in heuristics have found a more suitable method, such as Avg(), or a method \\r\\nhas been defined manually.\u0022},{\u0022Category\u0022:\u0022Currency\u0022,\u0022Description\u0022:\u0022The Currency categorization is similar to Numbers, but may\\r\\nbe used to indicate that the data is monetary in nature.\u0022},{\u0022Category\u0022:\u0022Time\u0022,\u0022Description\u0022:\u0022The Time categorization is used for points in time.\\r\\n\\r\\nExamples: Date or Time columns, but also components of date and time, such\\r\\nas Year, Month, Day, Hour, Minute, Second, etc.\\r\\n\\r\\nNote that a TimeSpan is a length of time (not a point in time), and it should be\\r\\ncategorized as Numbers rather than as Time.\u0022},{\u0022Category\u0022:\u0022Location\u0022,\u0022Description\u0022:\u0022The Location categorization is used for geographic data.\\r\\n\\r\\nExamples: City, County, State, Longitude, Latitude, Zip code, Elevation, etc.\\r\\n\\r\\nHaving columns categorized as Location may help the automatic placement of data\\r\\non a map. Floating point columns (longitude and latitude) are by default aggregated \\r\\nusing Avg(), rather than using Sum(). Integer columns (such as zip code) are treated \\r\\nas categorical values.\\r\\n\\r\\nThis categorization may also be used for x and y coordinates in general, even though\\r\\nthey are not geographic in nature.\u0022},{\u0022Category\u0022:\u0022Categories\u0022,\u0022Description\u0022:\u0022The Categories categorization is used for data suitable for grouping in visualizations.\\r\\nTypically, Categories columns do not contain too many unique values. For example,\\r\\nthis could be the columns you would place on the Category axis of a bar chart.\\r\\n\\r\\nWhen placed on an axis that requires a numeric aggregation method, UniqueCount()\\r\\nis used by default to show the number of different (unique) values in the column.\u0022},{\u0022Category\u0022:\u0022Identifiers\u0022,\u0022Description\u0022:\u0022The Identifiers categorization is used for data that identifies rows, or groups\\r\\nof rows.\\r\\n\\r\\nIn contrast to Categories, Identifiers can include many unique values, even\\r\\none for each row. Often, identifiers are not meant to be read by humans, but \\r\\nrather used for lookup in other tables or databases.\\r\\n\\r\\nExamples: Primary key, Foreign key, ID, Social security number, Product code,\\r\\nGUID, Serial number, etc.\\r\\n\\r\\nIdentifiers should never be added together using Sum() or similar methods, nor\\r\\nbinned; two numeric identifiers that are close (e.g. 19448102 and 19448103) do \\r\\nnot necessarily have anything to do with each other. When a column classified \\r\\nas Identifiers is placed on an axis that requires a numeric aggregation method, \\r\\nUniqueCount() is used by default, to show the number of different (unique) \\r\\nvalues.\\r\\n\u0022},{\u0022Category\u0022:\u0022Text\u0022,\u0022Description\u0022:\u0022The Text categorization is used for general free-form text fields, such as\\r\\ncomments, remarks, descriptions, etc.\\r\\n\\r\\nText values are typically not shown in numerically aggregated form. This\\r\\ntype of data may be suitable to display as labels or tooltips, and First() is\\r\\na commonly used aggregation method.\u0022},{\u0022Category\u0022:\u0022Images\u0022,\u0022Description\u0022:\u0022The Images categorization is used for columns that contain images,\\r\\ntypically binary columns.\u0022},{\u0022Category\u0022:\u0022Binary\u0022,\u0022Description\u0022:\u0022The Binary categorization is used for unspecified binary columns.\u0022}]}\r\n\r\nWhen answering a question, only columns from a single table can be used as part of the answer. \r\n\r\nIf the human asks to create a visualization, begin the answer as JSON. Provide a RFC8259 compliant JSON response following this format without deviation.\r\nThe JSON should contain a JSON object containing an operation type variable set to \u0022create visualization\u0022, with a JSON visualization \r\nobject statement with the following properties: \u0022visualization_type\u0022, \u0022x_expression\u0022, \u0022y_expression\u0022.\r\n- The visualization_type should be one of the following values: barchart, linechart, table, scatterplot\r\n- The data_table should be one of the data tables in the current Spotfire analysis file\r\n- The x_expression property should be the spotfire expression on the X axis and must be a valid Spotfire CATEGORICAL custom expression. Column names used in the expression must be surrounded with \u0027[\u0027 and \u0027]\u0027. A categorical expression must be surrounded with \u0027\u003c\u0027 and end with \u0027\u003e\u0027. \r\n- The y_expression should be the continuous spotfire expression on the Y axis and must be a valid Spotfire CONTINUOUS custom expression. Column names must be surrounded with \u0027[\u0027 and \u0027]\u0027\r\nx_expression and y_expression MUST only use columns associated with the data table.\r\nIf the category of a column is \u0022Time\u0022, use the Spotifre BinByDateTime function when referencing the column in the expression.\r\n\r\nExample BinByDateTime:\r\n\r\n\u003cBinByDateTime([Date],\u0022Year.Quarter.Month\u0022,2)\u003e\r\n\r\nThe JSON MUST be surrounded with \u0022---\u0022\r\n\r\nIf the human asks to suggest a visualzation, use the Category of the columns to suggest a suitable visualization_type. \r\nWhen suggesting a visualization_type, the response should contain the same JSON as when the human asks to create a visualization.\r\n\r\nOtherwise, if the human asks to mark rows, assume the user already has a suitable visualization open on the current page of the analysis, Begin the answer as JSON. Provide a RFC8259 compliant JSON response following this format without deviation.\r\nThe JSON should contain a JSON object containing an \u0022operation\u0022 variable set to \u0022mark rows\u0022, with a JSON marking object statement with the following properties:\r\n\u0022data_table\u0022 - the name of the data table in the Spotfire analysis file.\r\n\u0022column\u0022 - guess this from the list of columns sent in\r\n\u0022where_clause\u0022 - a where clause that can be used to select the data in question. If the column used in the where_clause is categorical, Add the Upper() function around the value for the where clause, and capitalize the literal value sent in to the expression.\r\n\r\nFinalize with step by step instructions to answer the question. The instructions MUST be provided and MUST only use data columns that exist in the current Spotfire analysis. Column names used in the instructions should not be surrounded with any kind of bracket. \r\n\r\nThe JSON MUST not be mentioned. Don\u0027t ever say \u0022Here\u0027s the JSON\u0022 or anything related to the JSON.",
    "client_metadata": {
        "dataset": {
            "Tables": [
                {
                    "Name": "SuperstoreSalesWithTimeSpan",
                    "Columns": [
                        { "Name": "Record No", "Type": "Integer", "Category": "Identifiers" },
                        { "Name": "Order Priority", "Type": "String", "Category": "Categories" },
                        { "Name": "Sales Total", "Type": "Real", "Category": "Numbers" },
                        { "Name": "Discount", "Type": "Real", "Category": "Numbers" },
                        { "Name": "Ship Method", "Type": "String", "Category": "Categories" },
                        { "Name": "Delivery Time", "Type": "Integer", "Category": "Numbers" },
                        { "Name": "Gross Profit", "Type": "Real", "Category": "Numbers" },
                        { "Name": "Customer Name", "Type": "String", "Category": "Categories" },
                        { "Name": "Region", "Type": "String", "Category": "Categories" },
                        { "Name": "State", "Type": "String", "Category": "Categories" },
                        { "Name": "Market Segment", "Type": "String", "Category": "Categories" },
                        { "Name": "Product Category 1", "Type": "String", "Category": "Categories" },
                        { "Name": "Product Category 2", "Type": "String", "Category": "Categories" },
                        { "Name": "Product Category 3", "Type": "String", "Category": "Categories" },
                        { "Name": "Product Category 4", "Type": "String", "Category": "Categories" },
                        { "Name": "Ship Container", "Type": "String", "Category": "Categories" },
                        { "Name": "Order ID", "Type": "Integer", "Category": "Identifiers" },
                        { "Name": "Order Date", "Type": "Date", "Category": "Time" },
                        { "Name": "Delivery Date", "Type": "Date", "Category": "Time" },
                        { "Name": "Product Inventory", "Type": "String", "Category": "Categories" },
                        { "Name": "Delivery Timespan", "Type": "TimeSpan", "Category": "Numbers" }
                    ]
                }
            ],
            "Categories": [
                { "Category": "Automatic", "Description": null },
                {
                    "Category": "Numbers",
                    "Description": "The Numbers categorization is used for general numbers.\r\n\r\nExamples: Amount, Cost, Price, Count, Temperature, etc.\r\n\r\nSum() is often used as the default aggregation method for columns in this categorization,\r\nunless built-in heuristics have found a more suitable method, such as Avg(), or a method \r\nhas been defined manually."
                },
                {
                    "Category": "Currency",
                    "Description": "The Currency categorization is similar to Numbers, but may\r\nbe used to indicate that the data is monetary in nature."
                },
                {
                    "Category": "Time",
                    "Description": "The Time categorization is used for points in time.\r\n\r\nExamples: Date or Time columns, but also components of date and time, such\r\nas Year, Month, Day, Hour, Minute, Second, etc.\r\n\r\nNote that a TimeSpan is a length of time (not a point in time), and it should be\r\ncategorized as Numbers rather than as Time."
                },
                {
                    "Category": "Location",
                    "Description": "The Location categorization is used for geographic data.\r\n\r\nExamples: City, County, State, Longitude, Latitude, Zip code, Elevation, etc.\r\n\r\nHaving columns categorized as Location may help the automatic placement of data\r\non a map. Floating point columns (longitude and latitude) are by default aggregated \r\nusing Avg(), rather than using Sum(). Integer columns (such as zip code) are treated \r\nas categorical values.\r\n\r\nThis categorization may also be used for x and y coordinates in general, even though\r\nthey are not geographic in nature."
                },
                {
                    "Category": "Categories",
                    "Description": "The Categories categorization is used for data suitable for grouping in visualizations.\r\nTypically, Categories columns do not contain too many unique values. For example,\r\nthis could be the columns you would place on the Category axis of a bar chart.\r\n\r\nWhen placed on an axis that requires a numeric aggregation method, UniqueCount()\r\nis used by default to show the number of different (unique) values in the column."
                },
                {
                    "Category": "Identifiers",
                    "Description": "The Identifiers categorization is used for data that identifies rows, or groups\r\nof rows.\r\n\r\nIn contrast to Categories, Identifiers can include many unique values, even\r\none for each row. Often, identifiers are not meant to be read by humans, but \r\nrather used for lookup in other tables or databases.\r\n\r\nExamples: Primary key, Foreign key, ID, Social security number, Product code,\r\nGUID, Serial number, etc.\r\n\r\nIdentifiers should never be added together using Sum() or similar methods, nor\r\nbinned; two numeric identifiers that are close (e.g. 19448102 and 19448103) do \r\nnot necessarily have anything to do with each other. When a column classified \r\nas Identifiers is placed on an axis that requires a numeric aggregation method, \r\nUniqueCount() is used by default, to show the number of different (unique) \r\nvalues.\r\n"
                },
                {
                    "Category": "Text",
                    "Description": "The Text categorization is used for general free-form text fields, such as\r\ncomments, remarks, descriptions, etc.\r\n\r\nText values are typically not shown in numerically aggregated form. This\r\ntype of data may be suitable to display as labels or tooltips, and First() is\r\na commonly used aggregation method."
                },
                {
                    "Category": "Images",
                    "Description": "The Images categorization is used for columns that contain images,\r\ntypically binary columns."
                },
                {
                    "Category": "Binary",
                    "Description": "The Binary categorization is used for unspecified binary columns."
                }
            ]
        }
    }
}
